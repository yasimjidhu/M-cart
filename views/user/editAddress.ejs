<!--------header---------->
<%- include('../user/partials/header') %> 

<!--------navbar---------->
<%- include('../user/partials/navbar') %>

<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2 p-0 ">
                <%-include('../user/partials/sidebar') %>
            </div>
            <div class="col-lg-10 p-0 ">
               <div class="row m-0">
                <div class="col-lg-12 p-0 address-heading">
                    <h3 class="text-center" >Edit Address</h3>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 mt-4">
                    <form id="editAddress">
                    <%existingAddress.address.forEach((data)=>{%> 
                    <div class="form-group">
                        <label for="fullName">Name</label>
                        <input type="text" id="name" class="form-control" name="name" value="<%=data.fullName%>" placeholder="John">
                        <p id="name-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 mt-4">
                    <div class="form-group">
                        <label for="phoneNumber">Phone Number</label>
                        <input type="number" id="phoneNumber" class="form-control" name="phoneNumber" value="<%=data.phoneNumber%>" placeholder="9876543210" >
                        <p id="number-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" class="form-control" name="email" value="<%=data.email%>" placeholder="John@gmail.com">
                        <p id="email-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="country">Country</label>
                        <select id="country" class="form-control" name="country">
                            <option value="<%=data.country%>" disabled selected>Select Your country</option>
                        </select> 
                        <p id="country-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="Pin code">Pin Code</label>
                        <input type="number" id="pinCode" class="form-control" name="pinCode" onchange="fetchLocation()" value="<%=data.pinCode%>" placeholder="698723">
                        <p id="pinCode-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="state">State</label>
                        <input type="text" id="state" class="form-control" name="state" value="<%=data.state%>" placeholder="kerala">
                        <p id="state-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="district">district</label>
                        <input type="text" id="district" class="form-control" name="district" value="<%=data.district%>" placeholder="malappuram">
                        <p id="district-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" id="city" class="form-control" name="city" value="<%=data.city%>" placeholder="cherur" >
                        <p id="city-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="area">Area</label>
                        <input type="text" id="area" class="form-control" name="area" value="<%=data.area%>" placeholder="hubtown">
                        <p id="area-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="street">Street</label>
                        <input type="text" id="street" class="form-control" name="street" value="<%=data.street%>"  placeholder="2ndstreet">
                        <input type="hidden" id="addressId" name="addressId" value="<%=data._id%>">
                        <p id="street-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="form-group">
                        <label for="building">Building</label>
                        <input type="text" id="building" class="form-control" name="building" value="<%=data.building%>" placeholder="Highlite">
                        <p id="building-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        <label for="houseNumber">House Number</label>
                        <input type="number" id="houseNumber" class="form-control" name="houseNumber" value="<%=data.houseNumber%>" placeholder="123584">
                        <p id="houseNumber-error" class="error-message"></p>
                    </div>
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="cancelDiv">
                        <a href="/account/addressBook"><button class="cancel-btn">Cancel</button></a>
                    </div>  
                   </div>
                   <div class="col-lg-6 col-md-6 col-sm-12 ">
                    <div class="saveDiv ">
                        <button type="submit" class="save-btn">Update</button>
                    </div>
                   </div>
                   <%})%>
                </form>
               </div>
            </div>
        </div>
    </div>
</body>

<script>

    // Event listener for the cancel button
    document.querySelector('.cancel-btn').addEventListener('click', function (event) {
    event.preventDefault();
    // Handle cancel button action here, for example, redirecting to another page
    window.location.href = '/account/addressBook';
});

    
     // Fetch countries from the server and populate the dropdown
     window.addEventListener('DOMContentLoaded',async ()=>{
        try {
            const response = await fetch('/account/countries')
            if(!response.ok){
                
                throw new Error(`Fetch failed with status ${response.status}: ${response.statusText}`);
            }

            const countries = await response.json()
            const countryDropDown = document.getElementById('country')

            countries.forEach(country=>{
                const option = document.createElement('option')
                option.value = country.name;
                option.textContent=country.name
                countryDropDown.appendChild(option)
            })

            // Set default value to 'India' after populating the countries
            const defaultCountry = 'India';
            const defaultOption = countryDropDown.querySelector(`option[value="${defaultCountry}"]`);
            if (defaultOption) {
            defaultOption.selected = true;
            } else {
            // If 'India' is not available, set the first option as default
            countryDropDown.selectedIndex = 0;
    }
        } catch (error) {
            console.error('error fetching in countries',error)
        }
    })

    // Function to fetch location details using the backend endpoint
    async function fetchLocation(){
        const pincode = document.getElementById('pinCode').value

        try{
            const response = await fetch(`/account/fetch-location?pincode=${pincode}`)
            if(!response.ok){
                throw new Error('failed to fetch location details')
            }
            
            const data = await response.json()

            //data assigning into input fields
            //city
            const state = data.stateName
            const district = data.districtName
            const citySplitted = data.officeName.split(' ')
            const userCity = citySplitted[0]
            const area = data.taluk

            document.getElementById('state').value=state
            document.getElementById('district').value=district
            document.getElementById('city').value=userCity
            document.getElementById('area').value=area
            
        }catch(err){
            console.error('error occured',err.message)
        }
    }


    // form validation
    function isEmpty(value){
            const trimmed =  value.trim()
            return trimmed ===""
        }
        function isValidName(name){
            const regex= /^[a-zA-Z]+$/
            return regex.test(name)
        }
        function isValidPhoneNumber(phoneNumber){
            const regex =  /^\d{10}$/;
            return regex.test(phoneNumber)
        }
        function isValidPincode(pinCode){
            const regex = /^\d{6}$/
            return regex.test(pinCode)
        }
        function isValidEmail(email) {
            const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return regex.test(email);
        }
        function isValidStreet(street){
            const regex = /^[a-zA-Z0-9\s]+$/;
            return regex.test(street)
        }
        function isValidCity(city){
            const regex = /^[a-zA-Z]+$/
            return regex.test(city)
        }
        


    // add Address post
    document.getElementById('editAddress').addEventListener('submit', async function (event) {
    event.preventDefault();
    
    
    
        
            var nameValue = document.getElementById('name').value
            var nameError = document.getElementById('name-error')

            var numberValue = document.getElementById('phoneNumber').value
            var numberError = document.getElementById('number-error')

            var emailValue = document.getElementById('email').value
            var emailError = document.getElementById('email-error')

            var countryValue = document.getElementById('country').value
            var countryError = document.getElementById('country-error')

            var pincodeValue = document.getElementById('pinCode').value
            var pinCodeError = document.getElementById('pinCode-error')

            var stateValue = document.getElementById('state').value
            var stateError = document.getElementById('state-error')

            var districtValue = document.getElementById('district').value
            var districtError = document.getElementById('district-error')

            var cityValue = document.getElementById('city').value
            var cityError = document.getElementById('city-error')

            var areaValue = document.getElementById('area').value
            var areaError = document.getElementById('area-error')

            var buildingValue = document.getElementById('building').value
            var buildingError = document.getElementById('building-error')

            var houseNumberValue = document.getElementById('houseNumber').value
            var houseNumberError = document.getElementById('houseNumber-error')

            var streetValue = document.getElementById('street').value
            var streetError = document.getElementById('street-error')

            // Validation for name
            if (isEmpty(nameValue)) {
                nameError.textContent = 'Please enter a name.';
                event.preventDefault(); // Prevent form submission
            } else if (!isValidName(nameValue)) {
                nameError.innerHTML = 'Please enter a valid name (only alphabets allowed).';
                event.preventDefault(); // Prevent form submission
            } else {
                nameError.textContent = ''; // Clear the error message
            }

            // Validation for phone number
            if (isEmpty(numberValue)) {
                numberError.textContent = 'Please enter a phone number.';
                event.preventDefault(); // Prevent form submission
            } else if (!isValidPhoneNumber(numberValue)) {
                numberError.textContent = 'Please enter a valid phone number (e.g., xxx-xxx-xxxx).';
                event.preventDefault(); // Prevent form submission
            } else {
                numberError.textContent = ''; // Clear the error message
            }

            // Validation for email
            if (isEmpty(emailValue)) {
                emailError.textContent = 'Please enter an email address.';
                event.preventDefault(); // Prevent form submission
            } else {
                emailError.textContent = ''; // Clear the error message
                
               
             if (!isValidEmail(emailValue)) {
                    emailError.textContent = 'Please enter a valid email address.';
                    event.preventDefault(); // Prevent form submission
                }
            }

            // Validation for country
            if (isEmpty(countryValue)) {
                countryError.textContent = 'Please enter a country.';
                event.preventDefault(); // Prevent form submission
            } else {
                countryError.textContent = ''; // Clear the error message
            }

            // Validation for pincode
            if (isEmpty(pincodeValue)) {
                pinCodeError.textContent = 'Please enter a pin code.';
                event.preventDefault(); // Prevent form submission
            } else if (!isValidPincode(pincodeValue)) {
                pinCodeError.textContent = 'Please enter a valid pin code (6 digits).';
                event.preventDefault(); // Prevent form submission
            } else {
                pinCodeError.textContent = ''; // Clear the error message
            }
            if(isEmpty(areaValue)){
                areaError.textContent = 'Please enter a area.';
                event.preventDefault();
            }
            if(!isValidCity(areaValue)){
                areaError.textContent = 'Please enter a valid area.';
                event.preventDefault();
            }

           
            // Validation for state
            if (isEmpty(stateValue)) {
                stateError.textContent = 'Please enter a state.';
                event.preventDefault(); // Prevent form submission
            } else {
                stateError.textContent = ''; // Clear the error message
            }

            // Validation for district
            if (isEmpty(districtValue)) {
                districtError.textContent = 'Please enter a district.';
                event.preventDefault(); // Prevent form submission
            } else {
                districtError.textContent = ''; // Clear the error message
            }

            // Validation for city
            if (isEmpty(cityValue)) {
                cityError.textContent = 'Please enter a city.';
                event.preventDefault(); // Prevent form submission
            } else if (!isValidCity(cityValue)) {
                cityError.textContent = 'Please enter a valid city (only alphabets allowed).';
                event.preventDefault(); // Prevent form submission
            } else {
                cityError.textContent = ''; // Clear the error message
            }

            // Validation for building
            if (isEmpty(buildingValue)) {
                buildingError.textContent = 'Please enter a building name.';
                event.preventDefault(); // Prevent form submission
            } else {
                buildingError.textContent = ''; // Clear the error message
            }

            // Validation for house number
            if (isEmpty(houseNumberValue)) {
                houseNumberError.textContent = 'Please enter a house number.';
                event.preventDefault(); // Prevent form submission
            } else {
                houseNumberError.textContent = ''; // Clear the error message
            }

            // Validation for street
            if (isEmpty(streetValue)) {
                streetError.textContent = 'Please enter a street.';
                event.preventDefault(); // Prevent form submission
            } else if (!isValidStreet(streetValue)) {
                streetError.textContent = 'Please enter a valid street (alphanumeric characters allowed).';
                event.preventDefault(); // Prevent form submission
            } else {
                streetError.textContent = ''; // Clear the error message
            }

            // If all validations pass, the form will be submitted.



            if (
        /* Your conditions to check all validations */
        !isEmpty(nameValue) &&
        isValidName(nameValue) &&
        !isEmpty(numberValue) &&
        isValidPhoneNumber(numberValue) &&
        !isEmpty(emailValue) &&
        isValidEmail(emailValue) &&
        !isEmpty(countryValue) &&
        !isEmpty(pincodeValue) &&
        isValidPincode(pincodeValue) &&
        !isEmpty(stateValue) &&
        !isEmpty(districtValue) &&
        !isEmpty(cityValue) &&
        isValidCity(cityValue) &&
        !isEmpty(buildingValue) &&
        !isEmpty(houseNumberValue) &&
        !isEmpty(streetValue) &&
        isValidStreet(streetValue)
    ) {
        const formData = {
            fullName: nameValue,
            phoneNumber: numberValue,
            email: emailValue,
            country: countryValue,
            pinCode: parseInt(pincodeValue),
            state: stateValue,
            district: districtValue,
            city: cityValue,
            area: document.getElementById('area').value,
            street: streetValue,
            building: buildingValue,
            houseNumber: houseNumberValue,
        };

    
    const addressId = document.querySelector('#addressId').value


    try {
        const response = await fetch(`/account/edit-Address/${addressId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        if (!response.ok) {
            throw new Error('Failed to add address');
        }

        const data = await response.json();
        
        if (data.success) {
            // Show success message using SweetAlert
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Address edited successfully',
                showConfirmButton: true,
                timer: 4000
            }).then(() => {
                window.location.href = '/account/addressBook';
                console.log('Address added to db', data);
            });
        }
    } catch (error) {
        console.error(error);
    }

    }else{
        event.preventDefault()
    }
})


</script>