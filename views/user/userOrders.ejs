<!--header-->
<%- include('../user/partials/header') %> 
<%- include('../user/partials/links') %>
<!--Navbar-->
<%- include('../user/partials/navbar') %>

<style>
  .card-img {
      max-width: 400px; /* Set the maximum width for the images */
      height: auto; /* Maintain aspect ratio */
  }
</style>
</head> 
<body>
  <div class="container-fluid">
    <div class="row">
      <div class="col-lg-2 p-0">
        <!-- Sidebar -->
        <%- include('../user/partials/sidebar') %>
      </div>
      <div class="col-lg-10">
        <% if (userOrders && userOrders.length > 0) { %>
          <% userOrders.forEach((order) => { %>
            <% order.productDetails.forEach((product, index) => { %>
              <% const productQuantity = order.products && order.products[index] ? order.products[index].quantity : 0; %>
              <% const totalCost = product.price * productQuantity; %> 
              <div class="col-md-12 mb-4">
                <div class="card mt-4" id="orderCard">
                  <div class="row">
                    <div class="col-md-4">
                      <img src="/uploads/<%= product.image[4] %>" class="card-img" alt="Product Image">
                    </div>
                    <div class="col-md-8">
                      <div class="card-body product-details">
                        <div class="mt-4 ml-5">
                          <h3 class="card-title"><%= product.productName %></h3>
                          <% if (product.discountedPrice > 0) { %>
                            <p class="card-text">Price: <%= product.discountedPrice %></p>
                          <% } else { %>
                            <p class="card-text">Price: <%= product.price %></p>
                          <% } %>
                          <p class="card-text">Quantity: <%= productQuantity %></p>
                          <% if (product.discountedPrice > 0) { %>
                            <p class="card-text">Total: <%= productQuantity * product.discountedPrice %></p>
                          <% } else { %>
                            <p class="card-text">Total: <%= productQuantity * product.price %></p>
                          <% } %>
                          <p class="card-text">Status: <span id="orderStatus_<%= order._id %>"><%= order.status %></span></p>
                          <% if (order.status === 'Cancelled') { %>
                            <!-- Display cancellation status or handle accordingly -->
                          <% } else if (order.status !== 'return requested' && order.status !== 'Shipped') { %>
                            <button id="cancelButton_<%= order._id %>" onclick="cancelOrder('<%= order._id %>')" class="btn btn-primary">Cancel order</button>
                            <% } %>
                            <% if (order.status === 'Delivered') { %>
                              <button type="button" class="order-Return-Btn btn btn-danger" data-orderId="<%=order._id %>" onclick="setOrderId(event)" data-toggle="modal" data-target="#orderReturnModal"> Return Order</button>                    
                              <% } %>
                              <a href="/order/viewDetails/<%=order._id %>"><button class="btn btn-success">View order</button></a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          <% }) %>
        <% } else { %>
          <div class="col-12 d-flex justify-content-center">
            <img src="/images/theme/empty-order.jpg" width="45%" alt="">
          </div>
          <h4 class="text-danger text-center">You haven't ordered <span class="text-dark">anything</span></h4>
        <% } %>
      </div>

  <!-- Modal -->
<div class="modal fade" id="orderReturnModal" tabindex="-1" role="dialog" aria-labelledby="orderReturnModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="orderReturnModalLabel">Order Return Request</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="returnForm">
          <div class="form-group">
            <label for="returnReason">Reason for Return</label>
            <textarea class="form-control" id="returnReason" name="reason" rows="3" placeholder="Enter reason for return"></textarea>
          </div>
          <button type="submit" id="returnBtn"></button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" id="cancel-btn" data-dismiss="modal">Close</button>
        <button type="button" id="return-modal-btn" class="btn btn-primary">Submit Return Request</button>
      </div>
    </div>
  </div>
</div>

  

</body>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>


  function cancelOrder(orderId) {
    const orderStatus = document.getElementById(`orderStatus_${orderId}`);
    const cancelButton = document.getElementById(`cancelButton_${orderId}`);
    const returnButton = document.getElementById(`returnButton_${orderId}`)

    if (orderStatus.textContent.trim() === 'Cancelled') {
      if (cancelButton) {
        cancelButton.style.display = 'none'; // Hide the button
        returnButton.style.display = 'none';
        

      }
      return;
    }

    Swal.fire({
      icon: 'warning',
      title: 'Are you sure?',
      text: 'This action cannot be undone!',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, cancel it!',
      cancelButtonText: 'No, keep it',
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/order/cancelOrder/${orderId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
        }).then((response) => {
          if (response.ok) {
            if (orderStatus) {
              orderStatus.textContent = 'Cancelled';
            }
            if (cancelButton) {
              cancelButton.style.display = 'none'; // Hide the button
            }
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: 'Order cancelled successfully',
              showConfirmButton: true,
              timer: 2000,
            });
          } else if (response.status === 403) {
            Swal.fire({
              icon: 'error',
              title: 'Warning',
              text: 'Order already Cancelled',
              showConfirmButton: true,
              timer: 2000,
            });
          } else if (response.status === 400) {
            Swal.fire({
              icon: 'error',
              title: 'Warning',
              text: 'Cannot cancel a shipped order',
              showConfirmButton: true,
            });
          }
        }).catch((error) => {
          console.error(error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to cancel order',
            showConfirmButton: true,
          });
        });
      }
    });
  }


  function setOrderId(event){
    const orderId = event.target.getAttribute('data-orderId')
    document.getElementById('return-modal-btn').setAttribute('data-orderId',orderId)
  }



  const returnModalBtn = document.getElementById('return-modal-btn')
  const returnBtn = document.getElementById('returnBtn')

  if(returnBtn && returnModalBtn){
    returnModalBtn.addEventListener('click',function(){
      returnBtn.click()
    })
  }

  // function for return the order
  document.getElementById('returnForm').addEventListener('submit', async function (event) {
    event.preventDefault();

    const reason = document.getElementById('returnReason').value;
    const orderId = document.getElementById('return-modal-btn').getAttribute('data-orderId')
    const cancelBtn = document.getElementById('cancel-btn')

    const Data = {
        reason: reason,
        orderId: orderId
    };

    try {
        const response = await fetch(`/order/return`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', // Set content type to JSON
            },
            body: JSON.stringify(Data), // Convert data to JSON format
        });

        if (!response.ok) {
            throw new Error('Failed to return the product');
        }
        Swal.fire({
          icon: "success",
          title: "Request sent",
          text: "order return request sent ",
          showConfirmButton:true
        }).then((result)=>{
          if(result.isConfirmed){
            cancelBtn.click()
            window.location.reload()
          }
        })
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to return the product');
    }
});

 

</script>
